{"version":3,"sources":["components/Help.jsx","components/Panel.jsx","components/Node.jsx","components/Board.jsx","App.js","index.js"],"names":["Help","props","Modal","show","onHide","closeHelp","size","aria-labelledby","centered","Header","Title","id","Body","Footer","Button","onClick","Panel","className","this","showHelp","startSearching","reset","Component","Node","row","col","isStart","isEnd","isWall","isVisited","isPath","movingStart","movingEnd","console","log","onContextMenu","event","handleOnContextMenu","onMouseUp","handleOnMouseUp","onMouseDown","handleOnMouseDown","onMouseEnter","handleOnMouseEnter","Board","componentDidMount","createGrid","window","addEventListener","startRow","startCol","endRow","endCol","width","innerWidth","height","innerHeight","ratio","noOfRows","Math","floor","noOfCols","grid","rowIdx","nodeIdx","node","parentRow","parentCol","push","setState","state","resetSearch","erazeNode","isValidIndex","searching","setTimeout","explore","fromRow","fromCol","currentNode","tracking","track","path","unshift","travel","i","length","makePath","primary","wall","erazeStart","erazeEnd","moveStart","moveEnd","makeWall","drawingWall","preventDefault","map","key","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.980ddd57.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nconst Help = (props) => {\r\n    return(\r\n        <Modal\r\n            show={props.show}\r\n            onHide={props.closeHelp}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n\r\n            <Modal.Header>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    <h2>Ripple</h2>\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                <h4>Move Tiles</h4>\r\n                <p>Click and Drag Start or End Tile to move them to a new location.</p>\r\n                <h4>Add Walls</h4>\r\n                <p>Drag across blank spaces to create a wall.</p>\r\n                <h4>Enjoy</h4>\r\n                <p>Hit go to start the simulation.</p>\r\n            </Modal.Body>\r\n            \r\n            <Modal.Footer>\r\n                <Button onClick={props.closeHelp}>Close</Button>\r\n            </Modal.Footer>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default Help;","import React, {Component} from 'react';\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nclass Panel extends Component {\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"panel\">\r\n\r\n                <Button\r\n                    className=\"btn btn-primary\"\r\n                    onClick={this.props.showHelp}\r\n                >Help</Button>\r\n\r\n                <Button\r\n                    className=\"btn btn-success btn-xs-block\"\r\n                    onClick={this.props.startSearching}\r\n                >Go</Button>\r\n\r\n                <Button\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={this.props.reset}\r\n                >Reset</Button>\r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Panel;\r\n","import React, {Component} from 'react'\r\n\r\nclass Node extends Component {\r\n    \r\n    render() {\r\n        const {row, col, isStart, isEnd, isWall, isVisited, isPath, movingStart, movingEnd} = this.props;\r\n\r\n        let className = \"node\";\r\n\r\n        if (isStart) {\r\n            className += \" node-start\";\r\n            movingStart ? className += \" node-moving\" : console.log('');\r\n        }\r\n        if (isEnd) {\r\n            className += \" node-end\";\r\n            movingEnd ? className += \" node-moving\" : console.log('');\r\n        }\r\n        if (isWall) {\r\n            className += \" node-wall\";\r\n        }\r\n        if (isVisited) {\r\n            className += \" node-visited\";\r\n        }\r\n        if (isPath) {\r\n            className += \" node-path\";\r\n        }\r\n\r\n        return(\r\n            <div\r\n                onContextMenu={(event) => this.props.handleOnContextMenu(event, row, col)}\r\n                onMouseUp={() => this.props.handleOnMouseUp(row, col)}\r\n                onMouseDown={() => this.props.handleOnMouseDown(row, col)}\r\n                onMouseEnter={() => this.props.handleOnMouseEnter(row, col)}\r\n                className={className}\r\n            ></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Node;","import React, {Component} from 'react';\r\nimport Help from './Help'\r\nimport Panel from './Panel';\r\nimport Node from './Node';\r\n\r\n\r\nclass Board extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            grid: [[]],\r\n            noOfRows: null,\r\n            noOfCols: null,\r\n\r\n            startRow: null,\r\n            startCol: null,\r\n            endRow: null,\r\n            endCol: null,\r\n            \r\n            showHelp: false,\r\n            searching: false,\r\n            tracking: false,\r\n            drawingWall: false,\r\n            movingStart: false,\r\n            movingEnd: false,   \r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.createGrid();\r\n\r\n        window.addEventListener('resize', this.createGrid);\r\n    }\r\n\r\n    createGrid = (startRow=null, startCol=null, endRow=null, endCol=null) => {\r\n\r\n        const width = window.innerWidth * 0.9;\r\n        const height = window.innerHeight * 0.8;\r\n\r\n        const ratio = width/height;\r\n\r\n        const noOfRows = Math.floor(height/37);\r\n        const noOfCols = Math.floor(noOfRows*ratio);\r\n\r\n\r\n        if (!(startRow && startCol && endRow && endCol)) {\r\n            startCol = Math.floor(noOfCols/2 - noOfCols/4)\r\n            startRow = Math.floor(noOfRows/2)-1\r\n    \r\n            endCol = Math.floor(noOfCols/2 + noOfCols/4)\r\n            endRow = Math.floor(noOfRows/2)-1\r\n        }\r\n\r\n        const grid = [];\r\n        for (let rowIdx=0; rowIdx<noOfRows; rowIdx++) {\r\n            const row = []\r\n            for (let nodeIdx=0; nodeIdx<noOfCols; nodeIdx++) {\r\n                const node = {\r\n                    row: rowIdx,\r\n                    col: nodeIdx,\r\n                    isStart: rowIdx === startRow && nodeIdx === startCol,\r\n                    isEnd: rowIdx === endRow && nodeIdx === endCol,\r\n                    isWall: false,\r\n                    isVisited: false,\r\n                    isPath: false,\r\n                    parentRow: null,\r\n                    parentCol: null,\r\n                }\r\n                row.push(node);\r\n            }\r\n            grid.push(row);\r\n        }\r\n\r\n        this.setState({\r\n            grid,\r\n            noOfRows,\r\n            noOfCols,     \r\n            startRow,\r\n            startCol,\r\n            endRow,\r\n            endCol       \r\n        })\r\n    } \r\n\r\n    reset = () => {\r\n        const {startRow, startCol, endRow, endCol} = this.state;\r\n\r\n        this.createGrid(startRow, startCol, endRow, endCol);\r\n    }\r\n\r\n    resetSearch = () => {\r\n        const {noOfRows, noOfCols} = this.state;\r\n\r\n        for(let rowIdx=0; rowIdx<noOfRows; rowIdx++) {\r\n            for (let nodeIdx=0; nodeIdx<noOfCols; nodeIdx++) {\r\n                this.erazeNode(rowIdx, nodeIdx, false, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    showHelp = () => {\r\n        this.setState({\r\n            showHelp: true\r\n        })\r\n    }\r\n\r\n    closeHelp = () => {\r\n        this.setState({\r\n            showHelp: false\r\n        })\r\n    }\r\n\r\n    isValidIndex = (row, col) => {\r\n        const {noOfRows, noOfCols} = this.state;\r\n\r\n        return (row >= 0 && row < noOfRows && col >= 0 && col < noOfCols)\r\n    }\r\n\r\n    startSearching = () => {\r\n        const {grid, startRow, startCol} = this.state;\r\n\r\n        this.setState({\r\n            searching: true\r\n        })\r\n\r\n        setTimeout(() => {\r\n            this.explore(grid, startRow, startCol);   \r\n        }, 0);\r\n    }\r\n\r\n    explore = (grid, fromRow, fromCol, parentRow=null, parentCol=null) => {\r\n\r\n        if (!this.isValidIndex(fromRow,fromCol)) return;\r\n\r\n        const currentNode = grid[fromRow][fromCol];\r\n\r\n        if (currentNode.isEnd) {\r\n            currentNode.parentRow = parentRow;\r\n            currentNode.parentCol = parentCol;\r\n            grid[fromRow][fromCol] = currentNode;\r\n            \r\n            this.setState({\r\n                grid,\r\n                searching : false\r\n            })\r\n            \r\n            if (this.state.tracking) return;\r\n            \r\n            this.track(currentNode.row, currentNode.col)\r\n            this.setState({\r\n                tracking: true\r\n            })\r\n            \r\n        }\r\n        \r\n        if (!this.state.searching || currentNode.isVisited || currentNode.isWall) return;\r\n\r\n        currentNode.isVisited = true;\r\n        currentNode.parentRow = parentRow;\r\n        currentNode.parentCol = parentCol;\r\n        grid[fromRow][fromCol] = currentNode;\r\n\r\n        this.setState({\r\n            grid\r\n        })\r\n\r\n        setTimeout(() => {\r\n            this.explore(grid, fromRow, fromCol+1, fromRow, fromCol);        \r\n        }, 1);\r\n        setTimeout(() => {\r\n            this.explore(grid, fromRow+1, fromCol, fromRow, fromCol);\r\n        }, 1);\r\n        setTimeout(() => {\r\n            this.explore(grid, fromRow, fromCol-1, fromRow, fromCol);\r\n        }, 1);\r\n        setTimeout(() => {\r\n            this.explore(grid, fromRow-1, fromCol, fromRow, fromCol);            \r\n        }, 1);\r\n\r\n    }\r\n\r\n    track = (row, col) => {\r\n        const {grid} = this.state;\r\n        const path = []\r\n        while (!grid[row][col].isStart) {\r\n            path.unshift(grid[row][col]);\r\n            const parentRow = grid[row][col].parentRow;\r\n            const parentCol = grid[row][col].parentCol;\r\n            row = parentRow;\r\n            col = parentCol;\r\n        }\r\n\r\n        const travel = (grid, path, i) => {\r\n            if (i >= path.length-1) return;\r\n\r\n            const node = path[i];\r\n            const row = node.row;\r\n            const col = node.col;\r\n            const {startRow, startCol} = this.state;\r\n            \r\n            grid[startRow][startCol].isStart = false;\r\n            grid[row][col].isPath = false;\r\n            grid[row][col].isStart = true;\r\n\r\n            this.setState({\r\n                grid,\r\n                startRow: row,\r\n                startCol: col,\r\n            })\r\n            setTimeout(() => {\r\n                travel(grid, path, i+1)\r\n            }, 10);\r\n        }\r\n\r\n        const makePath = (grid, path, i) => {\r\n            if (i >= path.length) {\r\n                this.setState({\r\n                    tracking: false\r\n                })\r\n                travel(grid, path, 0);\r\n                return;\r\n            }\r\n\r\n            const node = path[i];\r\n            const row = node.row;\r\n            const col = node.col;\r\n            grid[row][col].isPath = true;\r\n            this.setState({\r\n                grid\r\n            })\r\n            setTimeout(() => {\r\n                makePath(grid, path, i+1)\r\n            }, 10);\r\n        }\r\n\r\n        let i = 0;\r\n        makePath(grid, path, i);\r\n    }\r\n\r\n    erazeNode = (row, col, primary=true, wall=true) => {\r\n        const {grid} = this.state;\r\n\r\n        if (primary)  {\r\n            grid[row][col].isStart = false;\r\n            grid[row][col].isEnd = false;\r\n        }\r\n\r\n        if (wall) {\r\n            grid[row][col].isWall = false;\r\n        }\r\n\r\n        grid[row][col].isVisited = false;        \r\n        grid[row][col].isPath = false;\r\n        grid[row][col].parentRow = null;\r\n        grid[row][col].parentCol = null;\r\n\r\n        this.setState({\r\n            grid\r\n        })\r\n    }\r\n\r\n    erazeStart = () => {\r\n        const {startRow, startCol} = this.state;\r\n        \r\n        this.erazeNode(startRow, startCol);\r\n        \r\n        this.setState({\r\n            startRow: null,\r\n            startCol: null\r\n        })\r\n    }\r\n\r\n    erazeEnd = () => {\r\n        const {endRow, endCol} = this.state;\r\n        \r\n        this.erazeNode(endRow, endCol);\r\n        \r\n        this.setState({\r\n            endRow: null,\r\n            endCol: null\r\n        })\r\n    }\r\n\r\n    moveStart = (row, col) => {\r\n        const {grid} = this.state;\r\n\r\n        this.erazeStart();\r\n        this.erazeNode(row, col);\r\n        grid[row][col].isStart = true;\r\n\r\n        this.setState({\r\n            grid,\r\n            startRow: row,\r\n            startCol: col,\r\n        })\r\n    }\r\n\r\n    moveEnd = (row, col) => {\r\n        const {grid} = this.state;\r\n\r\n        this.erazeEnd();\r\n        this.erazeNode(row, col);\r\n        grid[row][col].isEnd = true;\r\n\r\n        this.setState({\r\n            grid,\r\n            endRow: row,\r\n            endCol: col,\r\n        })\r\n    }\r\n\r\n    makeWall = (row, col) => {\r\n        const {grid} = this.state;\r\n\r\n        this.erazeNode(row, col);\r\n        grid[row][col].isWall = true;\r\n\r\n        this.setState({\r\n            grid,\r\n        })\r\n    }\r\n\r\n    handleOnMouseUp = (row, col) => {\r\n        this.setState({\r\n            drawingWall: false,\r\n            movingStart: false,\r\n            movingEnd: false\r\n        })\r\n    }\r\n\r\n    handleOnMouseDown = (row, col) => {\r\n        const {grid, drawingWall, movingStart, movingEnd} = this.state;\r\n\r\n        if (grid[row][col].isStart) {\r\n            if (!drawingWall && !movingEnd) {\r\n                this.setState({\r\n                    movingStart: true,\r\n                })\r\n            }  \r\n        }\r\n\r\n        else if (grid[row][col].isEnd) {\r\n            if (!drawingWall && !movingStart) {\r\n                this.setState({\r\n                    movingEnd: true,\r\n                })\r\n            }\r\n        }\r\n\r\n        else if (!movingStart && !movingEnd) {\r\n            this.makeWall(row, col)\r\n            this.setState({\r\n                drawingWall: true\r\n            })\r\n        }\r\n\r\n        this.resetSearch();\r\n    }\r\n\r\n    handleOnMouseEnter = (row, col) => {\r\n\r\n        const {grid, drawingWall, movingStart, movingEnd} = this.state; \r\n\r\n        if (grid[row][col].isStart || grid[row][col].isEnd || grid[row][col].isWall) {\r\n            return;\r\n        }\r\n\r\n        if (movingStart) this.moveStart(row, col);\r\n        if (movingEnd) this.moveEnd(row, col);\r\n        if (drawingWall) this.makeWall(row, col);\r\n\r\n    }\r\n\r\n    handleOnContextMenu = (event, row, col) => {\r\n        event.preventDefault();\r\n        this.erazeNode(row, col, false);\r\n    }\r\n\r\n    render() {\r\n        const {grid} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <Help\r\n                    closeHelp={this.closeHelp}\r\n                    show={this.state.showHelp}\r\n                ></Help>\r\n\r\n                <Panel\r\n                    showHelp={this.showHelp}\r\n                    startSearching={this.startSearching}\r\n                    reset={this.reset}\r\n                ></Panel>\r\n                \r\n                <div className=\"node-group\">\r\n                    {\r\n                        grid.map((row, rowIdx) => (\r\n                            <div key={rowIdx} className=\"node-row\">{\r\n                            row.map((node, nodeIdx) => (\r\n                                <Node\r\n                                    {...node}\r\n                                    movingStart={this.state.movingStart}\r\n                                    movingEnd={this.state.movingEnd}\r\n                                    key={nodeIdx}\r\n                                    handleOnContextMenu={this.handleOnContextMenu}\r\n                                    handleOnMouseUp={this.handleOnMouseUp}\r\n                                    handleOnMouseDown={this.handleOnMouseDown}\r\n                                    handleOnMouseEnter={this.handleOnMouseEnter}\r\n                                ></Node>\r\n                            ))}\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Board;\r\n","import 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './App.css';\r\nimport Board from './components/Board'\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Board />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n    <App />,\r\n  // </React.StrictMode>\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}