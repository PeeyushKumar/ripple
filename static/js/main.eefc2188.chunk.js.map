{"version":3,"sources":["components/Help.jsx","components/Panel.jsx","components/Cell.jsx","components/Board.jsx","App.js","index.js"],"names":["Help","props","Modal","show","onHide","toggleHelp","size","aria-labelledby","centered","Header","Title","id","Body","Footer","Button","onClick","Panel","className","this","startSearching","reset","Component","Cell","row","col","isStart","isEnd","isWall","isVisited","isPath","movingStart","movingEnd","onDragStart","e","preventDefault","onMouseDown","handleOnMouseDown","onMouseEnter","handleOnMouseEnter","Board","componentDidMount","createGrid","window","addEventListener","startRow","startCol","endRow","endCol","width","innerWidth","height","innerHeight","ratio","noOfRows","Math","floor","noOfCols","grid","i","j","cell","defaultCell","push","setState","searching","tracking","state","clearSearch","changes","parentRow","parentCol","map","cellRow","showHelp","isValidIndex","setTimeout","explore","fromRow","fromCol","currentCell","track","path","unshift","makePath","length","changeCell","erazeCell","clearCell","makeWall","handleOnMouseUp","drawingWall","erazingWall","onContextMenu","onMouseUp","key","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eefc2188.chunk.js","sourcesContent":["import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nconst Help = (props) => {\n    return(\n        <Modal\n            show={props.show}\n            onHide={props.toggleHelp}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n\n            <Modal.Header>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    <h2>Ripple</h2>\n                </Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body>\n                <h4>Move Cells</h4>\n                <p>Click and Drag Start or End Cells to move them to a new location.</p>\n                <h4>Add Walls</h4>\n                <p>Drag across blank spaces to create a wall.</p>\n                <h4>Remove Walls</h4>\n                <p>Drag on walls to remove them.</p>\n                <h4>Enjoy</h4>\n                <p>Hit go to start the simulation.</p>\n            </Modal.Body>\n            \n            <Modal.Footer>\n                <Button onClick={props.toggleHelp}>Close</Button>\n            </Modal.Footer>\n\n        </Modal>\n    )\n}\n\nexport default Help;","import React, {Component} from 'react';\nimport Button from 'react-bootstrap/Button'\n\nclass Panel extends Component {\n    render() {\n\n        return (\n            <div className=\"panel\">\n\n                <Button\n                    className=\"btn btn-primary\"\n                    onClick={this.props.toggleHelp}\n                >Help</Button>\n\n                <Button\n                    className=\"btn btn-success btn-xs-block\"\n                    onClick={this.props.startSearching}\n                >Go</Button>\n\n                <Button\n                    className=\"btn btn-secondary\"\n                    onClick={this.props.reset}\n                >Reset</Button>\n            \n            </div>\n        )\n    }\n}\n\nexport default Panel;\n","import React, {Component} from 'react'\n\nclass Cell extends Component {\n    \n    render() {\n        const {row, col, isStart, isEnd, isWall, isVisited, isPath, movingStart, movingEnd} = this.props;\n\n        let className=\"cell\";\n\n        if (isStart) {\n            className += \" cell-start\";\n            if (movingStart) className += \" cell-moving\";\n        }\n        \n        if (isEnd) {\n            className += \" cell-end\";\n            if (movingEnd) className += \" cell-moving\";\n        }\n        \n        if (isWall) className += \" cell-wall\";\n            \n        if (isVisited) className += \" cell-visited\";\n\n        if (isPath) className += \" cell-path\";\n\n        return(\n            <div\n                className=\"cell-container\"\n                onDragStart={(e) => {e.preventDefault()}}\n                onMouseDown={() => this.props.handleOnMouseDown(row, col)}\n                onMouseEnter={() => this.props.handleOnMouseEnter(row, col)}\n            >\n                <div className={className}></div>\n            </div>\n        );\n    }\n}\n\nexport default Cell;","import React, {Component} from 'react';\nimport Help from './Help'\nimport Panel from './Panel';\nimport Cell from './Cell';\n\n\nclass Board extends Component {\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            grid: null,\n            noOfRows: null,\n            noOfCols: null,\n\n            startRow: null,\n            startCol: null,\n            endRow: null,\n            endCol: null,\n            \n            showHelp: false,\n            searching: false,\n            tracking: false,\n            drawingWall: false,\n            erazingWall: false,\n            movingStart: false,\n            movingEnd: false,   \n        }\n\n        this.defaultCell = {\n            row: null,\n            col: null,\n            isWall: false,\n            isVisited: false,\n            isPath: false,\n            parentRow: null,\n            parentCol: null,\n        }\n    }\n\n    componentDidMount = () => {\n        this.createGrid();\n\n        window.addEventListener('resize', this.createGrid);\n    }\n\n    createGrid = (startRow=null, startCol=null, endRow=null, endCol=null) => {\n\n        const width = window.innerWidth * 0.9;\n        const height = window.innerHeight * 0.8;\n\n        const ratio = width/height;\n\n        const noOfRows = Math.floor(height/45);\n        const noOfCols = Math.floor(noOfRows*ratio);\n\n\n        if (!(startRow && startCol && endRow && endCol)) {\n            startCol = Math.floor(noOfCols/2 - noOfCols/4)\n            startRow = Math.floor(noOfRows/2)-1\n    \n            endCol = Math.floor(noOfCols/2 + noOfCols/4)\n            endRow = Math.floor(noOfRows/2)-1\n        }\n\n        const grid = [];\n        for (let i=0; i<noOfRows; i++) {\n            const row = []\n            for (let j=0; j<noOfCols; j++) {\n                const cell = {\n                    ...this.defaultCell,\n                    row: i,\n                    col: j,\n                }\n                row.push(cell);\n            }\n            grid.push(row);\n        }\n\n        this.setState({\n            grid,\n            noOfRows,\n            noOfCols,     \n            startRow,\n            startCol,\n            endRow,\n            endCol,\n            searching: false,\n            tracking: false\n        })\n    } \n\n    reset = () => {\n        const {startRow, startCol, endRow, endCol} = this.state;\n        this.createGrid(startRow, startCol, endRow, endCol);\n    }\n\n    clearSearch = (grid) => {\n\n        const changes = {\n            isVisited: false,\n            isPath: false,\n            parentRow: null,\n            parentCol: null\n        }\n\n        grid = grid.map(cellRow => cellRow.map(cell => ({...cell, ...changes})));\n        return grid;\n    }\n\n    toggleHelp = () => {\n        this.setState({\n            showHelp: !this.state.showHelp\n        })\n    }\n\n    isValidIndex = (row, col) => {\n        const {noOfRows, noOfCols} = this.state;\n\n        return (row >= 0 && row < noOfRows && col >= 0 && col < noOfCols)\n    }\n\n    isStart = (row, col) => {\n        const {startRow, startCol} = this.state;\n\n        return (row === startRow && col === startCol);\n    }\n\n    isEnd = (row, col) => {\n        const {endRow, endCol} = this.state;\n\n        return (row === endRow && col === endCol);\n    }\n\n    startSearching = () => {\n        const {grid, startRow, startCol} = this.state;\n\n        this.setState({\n            searching: true\n        })\n\n        setTimeout(() => {\n            this.explore(grid, startRow, startCol);   \n        }, 0);\n    }\n\n    explore = (grid, fromRow, fromCol, parentRow=null, parentCol=null) => {\n\n        if (!this.isValidIndex(fromRow,fromCol)) return;\n\n        const currentCell = grid[fromRow][fromCol];\n\n        if (this.isEnd(currentCell.row, currentCell.col)) {\n            currentCell.parentRow = parentRow;\n            currentCell.parentCol = parentCol;\n            grid[fromRow][fromCol] = currentCell;\n            \n            this.setState({\n                grid,\n                searching : false\n            })\n            \n            if (this.state.tracking) return;\n            \n            this.track(currentCell.row, currentCell.col)\n            this.setState({\n                tracking: true\n            })\n            \n        }\n        \n        if (!this.state.searching || currentCell.isVisited || currentCell.isWall) return;\n\n        currentCell.isVisited = true;\n        currentCell.parentRow = parentRow;\n        currentCell.parentCol = parentCol;\n        grid[fromRow][fromCol] = currentCell;\n\n        this.setState({\n            grid\n        })\n\n        setTimeout(() => {\n            this.explore(grid, fromRow, fromCol+1, fromRow, fromCol);        \n        }, 10);\n        setTimeout(() => {\n            this.explore(grid, fromRow+1, fromCol, fromRow, fromCol);\n        }, 10);\n        setTimeout(() => {\n            this.explore(grid, fromRow, fromCol-1, fromRow, fromCol);\n        }, 10);\n        setTimeout(() => {\n            this.explore(grid, fromRow-1, fromCol, fromRow, fromCol);            \n        }, 10);\n\n    }\n\n    track = (row, col) => {\n        const {grid} = this.state;\n        const path = []\n        while (!this.isStart(row, col)) {\n            const parentRow = grid[row][col].parentRow;\n            const parentCol = grid[row][col].parentCol;\n            row = parentRow;\n            col = parentCol;\n            path.unshift(grid[row][col]);\n        }\n\n        const makePath = (grid, path, i) => {\n            if (i >= path.length) {\n                this.setState({\n                    tracking: false\n                })\n                return;\n            }\n\n            if (!this.state.tracking) return;\n\n            const cell = path[i];\n            const row = cell.row;\n            const col = cell.col;\n            grid[row][col].isPath = true;\n            this.setState({\n                grid\n            })\n            setTimeout(() => {\n                makePath(grid, path, i+1)\n            }, 15);\n        }\n\n        this.setState({\n            tracking: true\n        })\n\n        makePath(grid, path, 1);\n    }\n\n    changeCell = (grid, row, col, changes) => {\n        return grid.map((cellRow, i) => cellRow.map((cell, j) => ((i === row && j === col) ? {...cell, ...changes} : cell)));\n    }\n\n    erazeCell = (grid, row, col) => {\n\n        const changes = {\n            ...this.defaultCell,\n            row,\n            col\n        }\n\n        grid = this.changeCell(grid, row, col, changes)\n        return grid;\n    }\n\n    clearCell = (grid, row, col) => {\n\n        const changes = {\n            isVisited: false,\n            isPath: false,\n            parentRow: null,\n            parentCol: null\n        }\n\n        grid = this.changeCell(grid, row, col, changes);\n        return grid;\n    }\n\n    makeWall = (grid, row, col) => {\n        \n        const changes = {\n            ...this.defaultCell,\n            row,\n            col,\n            isWall: true\n        }\n        \n        grid = this.changeCell(grid, row, col, changes);\n        return grid;\n    }\n\n    handleOnMouseUp = () => {\n        this.setState({\n            drawingWall: false,\n            movingStart: false,\n            movingEnd: false,\n            erazingWall: false\n        })\n    }\n\n    handleOnMouseDown = (row, col) => {\n        let {grid, drawingWall, erazingWall, movingStart, movingEnd} = this.state;\n\n        if (this.isStart(row, col)) {\n            if (!drawingWall && !erazingWall && !movingEnd) {\n                movingStart = true;\n            }  \n        }\n\n        else if (this.isEnd(row, col)) {\n            if (!drawingWall && !erazingWall && !movingStart) {\n                movingEnd = true;\n            }\n        }\n\n        else if (grid[row][col].isWall) {\n            if (!drawingWall && !movingStart && !movingEnd) {\n                grid = this.erazeCell(grid, row, col);\n                erazingWall = true;\n            }\n        }\n\n        else {\n            if (!erazingWall && !movingStart && !movingEnd) {\n                grid = this.makeWall(grid, row, col)\n                drawingWall = true;\n            }\n        }\n\n        grid = this.clearSearch(grid);\n\n        this.setState({\n            grid,\n            movingStart,\n            movingEnd,\n            drawingWall,\n            erazingWall,\n            searching: false,\n            tracking: false\n        })\n    }\n\n    handleOnMouseEnter = (row, col) => {\n\n        let {grid, startRow, startCol, endRow, endCol, movingStart, movingEnd, drawingWall, erazingWall} = this.state; \n        \n        if (this.isStart(row, col) || this.isEnd(row, col)) return;\n\n        else if (grid[row][col].isWall) {\n            if (erazingWall) grid = this.erazeCell(grid, row, col);\n        }\n\n        else if (movingStart) {\n            startRow = row;\n            startCol = col;\n        }\n\n        else if (movingEnd) {\n            endRow = row;\n            endCol = col;\n        }\n\n        else if (drawingWall) grid = this.makeWall(grid, row, col);\n\n        this.setState({\n            grid,\n            startRow,\n            startCol,\n            endRow,\n            endCol\n        });\n    }\n\n    render() {\n        const {grid} = this.state;\n\n        return (\n            <div \n                onContextMenu={e => e.preventDefault()}\n                onMouseUp={this.handleOnMouseUp}\n                className=\"board\"\n            >\n                <Help\n                    toggleHelp={this.toggleHelp}\n                    show={this.state.showHelp}\n                ></Help>\n\n                <Panel\n                    toggleHelp={this.toggleHelp}\n                    startSearching={this.startSearching}\n                    reset={this.reset}\n                ></Panel>\n\n                {\n                    this.state.grid === null ?\n                    'Loading...' :\n                    <div className=\"cell-group\">\n                    {\n                        grid.map((cellRow, i) => (\n                            <div key={i} className=\"cell-row\">{\n                                cellRow.map((cell, j) => (\n                                    <Cell\n                                        {...cell}\n                                        key={j}\n                                        isStart={this.isStart(i, j)}\n                                        isEnd={this.isEnd(i, j)}\n                                        movingStart={this.state.movingStart}\n                                        movingEnd={this.state.movingEnd}\n                                        handleOnMouseDown={this.handleOnMouseDown}\n                                        handleOnMouseEnter={this.handleOnMouseEnter}\n                                    ></Cell>\n                                ))}\n                            </div>\n                        ))\n                    }\n                    </div>\n                }\n\n            </div>\n        );\n    }\n}\n\nexport default Board;\n","import 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\nimport Board from './components/Board'\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Board onDragStart={(e) => {e.preventDefault()}} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>\n  document.getElementById('root')\n);\n"],"sourceRoot":""}